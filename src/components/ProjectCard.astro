---
import type { ProjectData } from "../const/projects";
import IconBrandGithub from "../icons/IconBrandGithub.astro";
import IconFile from "../icons/IconFile.astro";
import IconLink from "../icons/IconLink.astro";
import Button from "./Button.astro";
import Typography from "./Typography.astro";

interface Props extends ProjectData {}
const { title, links, description, image, technologies } = Astro.props;
const Icons: Record<string, (_props: Record<string, any>) => any> = {
  IconFile,
  IconLink,
  IconBrandGithub,
};
---

<li>
  <img src={image} alt={`imagen del proyecto ${title}`} loading="lazy" />
  <div class="content">
    <Typography tag="h4" bold>{title}</Typography>
    <div>
      {technologies.map((tech) => <span class="tech">{tech.name}</span>)}
    </div>
    <Typography tag="p">{description}</Typography>
    <div>
      {
        links.map((link) => {
          const Icon = Icons[link.icon] ?? IconLink;
          return (
            <Button
              size="small"
              style="secondary"
              tag="a"
              text={link.name}
              url={link.url}
              className="linkBtn"
            >
              <Icon slot="alignRight" />
            </Button>
          );
        })
      }
    </div>
  </div>
</li>
<style lang="scss">
  li {
    display: flex;
    align-items: center;
    gap: var(--padding-2x) var(--padding-3x);
    padding: var(--padding-3x);
    background-color: var(--color-content);
    border-radius: var(--padding-3x);
    color: var(--color-text-alt);
  }
  img {
    max-width: 400px;
    aspect-ratio: 16/9;
    border-radius: var(--padding-2x);
  }
  div {
    display: flex;
    flex-wrap: wrap;
    gap: var(--padding-2x);
  }
  .content {
    display: flex;
    flex-direction: column;
    gap: var(--padding-3x);
  }
  .tech {
    background-color: var(--color-content-alt);
    border-radius: var(--padding-1x);
    padding: var(--padding-1x) calc(var(--padding-1x) * 2);
  }
  @media only screen and (max-width: 950px) {
    li {
      flex-direction: column;
    }
    img {
      object-fit: cover;
      max-width: var(--content-full);
    }
  }
</style>
